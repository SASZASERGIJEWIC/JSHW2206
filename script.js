//                                           PART 1

//МАССИВЫ - Array

//как создавать массив

// let Array = []; //пустые скобки подразумевают массив

//как создать заполненный массив

// let fruit = ['Apple', 'Kiwi', 'Banana'];
// //вывести элементы массива или получить к ним доступ можно с помощью ИНДЕКСА
// //индексы считаем с нуля
// console.log(fruit[0])//apple
// console.log(fruit.length)// 3 - длина массива
// console.log(fruit[fruit.length - 1])//последний элемент
// console.log(fruit[fruit.length - 2])//предпоследний

// //ДОБАВЛЕНИЕ ЭЛЕМЕНТА В КОНЕЦ МАССИВА

// // PUSH - Добавляет элемент в конец массива
// fruit.push('orange')

// //UNSHIFT  - Добавляет элемент в начало массива
// fruit.unshift('Avocado')

// //Добавить в конец 2 элемента
// fruit.push('coconut', 'lime')

// //Удалить элементы с массива

// //POP - удаление ПОСЛЕДНЕГО элемента
// fruit.pop()

// //SHIFT - удаление ПЕРВОГО элемента
// fruit.shift()

// //Изменение значения какого-то элемената

// fruit[1] = 'strawberry'//вместо второго элемента Киви появляется Стравбери

//изменить значения и добавить элементы

// fruit.splice(start, deleteCount, items..)

//метод SPLICE позволяет изменить содержимое массива за счёт удаления существующих элементов, 
//и/или добавления новых элементов в массив.
//DELETECOUNT - целое число которое показывает количество удаляекмых элементов массива
//если COUNT = 0 то элементы не удаляются
//DELETECOUNT может быть либо = 0 либо положительрным числом
//START - индекс по которому начинается изменение массива, 
//если старт будет больше чем длина массива реальрный индекс будет установлен на длину массива 
//а если значение будет отрицательным мы уже начинаем считать с конца массива

// fruit.splice(2, 0, 'apricot') //1. Номер индекса 2.Ничего не удаляем 3. Новый элемент
// fruit.splice (0, 2)//удалили несколько элементов

//удаляем эелемент и заменяем его другим

// fruit.splice(1, 1, 'cherry') //['apricot', 'cherry', 'orange', 'coconut'] 
// fruit.splice(2, 1, 'kiwi') //['apricot', 'cherry', 'kiwi', 'coconut']

//разделить массив на два массива

//['Apple', 'strawberry', 'Banana', 'orange', 'coconut']

// let fruit1 = fruit.splice(0, 2)//Объявляем переменную фрут1 где будет храниться 
// //второй массив и присваеваем значение спайс с удалением(делением на две части)
// //из первого массива 0 - удаляем 2 - элемента и присваиваем их массиву фрут1
// console.log(fruit1);//['Apple', 'strawberry']
// console.log(fruit); //['Banana', 'orange', 'coconut']

//TASK

// let styles = ['jazz' , 'bluez'] //['jazz', 'bluez']
// styles.push ('rock&roll') //['jazz', 'bluez', 'rock&roll']
// styles.splice(1, 1, 'classica') //['jazz', 'classica', 'rock&roll']
// styles.shift(0, 1)//['classica', 'rock&roll']
// styles.unshift('reggi','rap' )//['reggi', 'rap', 'classica', 'rock&roll']
// console.log(styles);

//                                           PART 2

//ЦИКЛЫ

// for(старт; условие; шаг;){
//     тело цикла                         синтаксис
// }
//start - Объявляем переменную, где будем хранить стартовое значение
//условие - проверим когда наше условие будет истинно, тогда цикл прекратит работy
//step - либо уменьшим либо увеличим это число

//вывести числа от 0 до 10 в конец не исключительно


// for(let num = 0; num < 10; num++){
//     console.log(num);
// }

//единичное выполнение цикла - ИТЕРАЦИЯ в программировании — 
//организация обработки данных, при которой действия повторяются 
//многократно, не приводя при этом к вызовам самих себя.
//в случае выше наш цикл выполняет 10 итераций

// let number = [12, 15, 30, 10, -13, 20]
// for(let i = 0; i <number.length; i++ ){
//     console.log(number[i]); 
// }

//если работаем с массивами счетчик принято называть i 
//цикл начинаем с 0, если мы не знаем длину массива то условие 
//можем задать с использованием метода имя.lenght цикл идет до
//конца массива не включительно
//шаг i++ так как мы хотим пройтись по всем элементам
//когда начинрается 7 итерация и провеаряется длина которая равна 
//7 то условие не верное и цикл подходит к концу
 

//ЗАПОЛНЕНИЕ МАССИВА С ПОМОЩЬЮ ЦИКЛА

// let fruts = [];
// let fruit = prompt('njdsn') //выводит консоль для ввода
// fruts.push()
// console.log(fruit);

//let fruitts =[]
// let fruits = prompt('dsfg');
// fruitts.push(fruits);
// let fruits1 = prompt('dsfg'); 
// fruitts.push(fruits);
// let fruits2 = prompt('dsfg');
// fruitts.push(fruits);
// console.log(fruitts)
//вывод в консоль 
// 0:"ddd"
//1: "ddd"
//2: "ddd"
//length: 3
// let num = 5;
//чтобы не копировать код несколько раз объявляем циклы
// let fruitts =[]
// for(let i = 0; i < 10; i++){
//     let fruit = prompt('edfgfh')
//     fruitts.push(fruit)
// }
// console.log(fruitts)
//(10) ['45', '46', '12', '14', '46', '67', '74', '45', '45', '65']
//1. начинаем с 0, проверяем условие оно подходит, объявляем переменную фрут где мы просим пользователя ввести какую-то информацию, и потом эту информацию мы добавляем в наш массив
//2. проверяем 1 и так далеее
//11. это итерация выхода где i=10 условие не подходит и цикл заканчивается

//ДОСРОЧНОЕ ПРЕКРАЩЕНИЕ РАБОТЫ ЦИКЛА И ПРЕРЫВАНИЕ КАКОЙ-ТО КОНКРЕТНОЙ ИТЕРАЦИИ

// for(let i= 0; i<=10; i++){
//     console.log(i); //как досрочно прекратить работу цикла
//     //нам нужно условие при котором мы хотим прекратить работу цикла
//     if(i == 2){
//         break;//выводит в консоль 0,1,2  //BREAK-заканчивает цикл
//     }
// }

//CONTINUE- прекращение работы конкретной опреации

// for (let i = 0; i <= 5; i++){
//     if(i == 2){
//         continue;
//     }
//     console.log(i);
// }

//TASK

//НАПИСАТЬ ЦИКЛ КОТОРЫЙ ВЫЫВОДИТ ТОЛЬКО ПОЛОЖИТЕЛЬНЫЕ ЧИСЛА

// let num = [12, 15, 30, 10, -13, 20, -1, 0, -23, 12];

// for(let i = 0; i < num.length; i++){
//     if(num [i]>0){ //условие
//         console.log(num[i]);
//     }
// }
//вывод в консоль только положительные числа массива




//num-- - декремент когда хотим уменьшить число на 1
//num++ - инкремент когда хотим число увелить на 1

//когда знаки + и - в конце то это ПОСТФИКСНАЯ форма

// console.log(num++); //5
// console.log(num++); //6

//когда знаки + и - в начале это ПРЕФИКСНАЯ форма

//console.log(++num);//6

// let num1 = num--; //4
// let num2 = --num; //4